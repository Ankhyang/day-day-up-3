{
  "compilerOptions": {
    "target": "esnext", // 一个 JavaScript 库，可以将 ES6 草案规范语法转成今天的 JavaScript 语法
    "module": "esnext", // 指定生成哪个模块系统代码
    "strict": true,
    "jsx": "preserve",
    "importHelpers": true, // 从tslib导入生成器工具函数（比如__extends，__rest等） 
    "moduleResolution": "node", // 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）
    "experimentalDecorators": true, // 启用实验性的ES装饰器
    "skipLibCheck": true, // 忽略所有的声明文件（*.d.ts）的类型检查
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的显示，仅为了类型检查。
    "suppressExcessPropertyErrors": true,
    "sourceMap": true, // 用于debug ,生成相应的.map文件
    "baseUrl": "",
    // "types": ["node"], // 要包含的类型声明文件名列表；如果指定了types，只有被列出来的包才会被包含进来  "webpack-env", "jest"
    "paths": { // 模块名到基于baseUrl的路径映射的列表
        "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "DOM.Iterable", "ScriptHost"]
  },
  // 包含的编译目录
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
  ],
  // 不包含的编译目录
  "exclude": [
      "node_modules",
      "dist"
  ],
}
